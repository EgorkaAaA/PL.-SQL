-- Задание 1: добавить в свой проект логирование

-- создание таблицы с логами
create table lebedev_eg.logs
(
    id_log number generated by default as identity primary key,
    date_log date default trunc(sysdate),
    sh_user varchar2(500) default user,
    sh_object varchar2(500) not null,
    tape varchar2(500) not null,
    value_json varchar2(500) not null
)
-- секционирование
partition by range (date_log)
interval ( numtoyminterval(3,'month') )
(
  partition error_log_2021_part1 values less than (to_date('22.11.2021', 'dd.mm.yyyy')),
  partition error_log_2021_2022_part2 values less than (to_date('22.02.2022', 'dd.mm.yyyy'))
);

-- создание пакета с логикой для логов
create or replace package lebedev_eg.logs_package
as
    procedure add_default_log (
        p_tape varchar2,
        p_value_json varchar2,
        p_sqlerrm in varchar2,
        p_backtrace varchar2,
        p_object varchar2
    );

    procedure add_log_with_date_as_proc (
        p_tape varchar2,
        p_value_json varchar2,
        p_date_log date,
        p_sqlerrm in varchar2,
        p_backtrace varchar2,
        p_object varchar2
    );

    function default_json_message (
        p_value varchar2,
        p_sqlerrm in varchar2,
        p_backtrace varchar2
    )
    return varchar2;
end;

create or replace package body lebedev_eg.logs_package
as
    function default_json_message (
        p_value varchar2,
        p_sqlerrm varchar2,
        p_backtrace varchar2
    )
    return varchar2
    as
        v_varchar varchar2(500);
    begin
        v_varchar := '{"error":"' || p_sqlerrm
                        ||'","value":"' || p_value
                        ||'","backtrace":"' || p_backtrace
                        ||'"}';
        return v_varchar;
    end;

    procedure insert_log (
        p_tape in varchar2,
        p_value in varchar2,
        p_date_log in date,
        p_sqlerrm in varchar2,
        p_backtrace varchar2,
        p_object varchar2
    )
    as
        pragma autonomous_transaction;
    begin
        if p_date_log is null
            then
                insert into lebedev_eg.logs (tape, value_json,sh_object)
                values (p_tape, lebedev_eg.logs_package.default_json_message(p_value => p_value,
                    p_sqlerrm => p_sqlerrm,
                    p_backtrace => p_backtrace),p_object);
            else
                insert into lebedev_eg.logs(tape, value_json,date_log,sh_object)
                values (p_tape, lebedev_eg.logs_package.default_json_message(p_value => p_value,
                    p_sqlerrm => p_sqlerrm,
                    p_backtrace => p_backtrace), p_date_log,p_object);
        end if;

        commit;
    end;

    procedure add_default_log (
        p_tape in varchar2,
        p_value_json in varchar2,
        p_sqlerrm in varchar2,
        p_backtrace in varchar2,
        p_object in varchar2
    )
    as
    begin
        insert_log(
            p_tape => p_tape,
            p_value => p_value_json,
            p_date_log => null,
            p_sqlerrm => p_sqlerrm,
            p_backtrace => p_backtrace,
            p_object => p_object);
    end;

    procedure add_log_with_date_as_proc (
        p_tape in varchar2,
        p_value_json in varchar2,
        p_date_log in date,
        p_sqlerrm in varchar2,
        p_backtrace varchar2,
        p_object in varchar2
    )
    as
    begin
        insert_log(
            p_tape => p_tape,
            p_value => p_value_json,
            p_date_log => p_date_log,
            p_sqlerrm => p_sqlerrm,
            p_backtrace => p_backtrace,
            p_object => p_object);
    end;
end;

-- добавдение логов во все секции для тестов
begin
    for i in 0..240
    loop
    lebedev_eg.logs_package.add_log_with_date_as_proc(
            p_tape => 'error',
            p_value_json => 'ошибка какая-то',
            p_date_log => to_date('22.09.2021', 'dd.mm.yyyy') + i,
            p_sqlerrm => sqlerrm,
            p_backtrace => dbms_utility.format_error_backtrace(),
            p_object => $$plsql_unit_owner||'.'||$$plsql_unit
        );
    end loop;
end;

-- select первой секции
select * from lebedev_eg.logs partition(error_log_2021_part1);

-- select второй секции
select * from lebedev_eg.logs partition(error_log_2021_2022_part2);

-- удаление записей из первой секции
alter table lebedev_eg.logs drop partition error_log_2021_part1;

-- удаление записей из второй секции
alter table lebedev_eg.logs drop partition error_log_2021_2022_part2;